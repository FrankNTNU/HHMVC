@using DAL
@model List<Workout>

@{
    ViewBag.Title = "WorkoutSchedule";
    Layout = "~/Views/Shared/HomeLayout2.cshtml";
}

@section Styles
{

    <link href="~/Content/jquery-ui/jquery-ui-1.12.1.custom/jquery-ui.min.css" rel="stylesheet" />

    <style>
        .mainTitle {
            font-size: 3em;
            font-weight: 600;
            font-style: italic;
            color: #f56a6a;
            padding: 0;
        }

        .myBox {
            border: solid 2px gray;
            border-radius: 10px;
            padding: 10px;
        }

        .operate {
            min-height: 200px;
            box-sizing: border-box;
        }

        #mainDiv {
            width: 100%;
            margin: auto;
            margin-top: 20px;
            position: relative;
            /*width: 500px;*/
            /*top: 80px;*/
        }

        #mainRow {
            position: relative;
            left: 20px;
            width: 100%;
        }

        .innerRow {
            position: relative;
            left: 10px;
            padding: 10px;
        }

        label {
            display: inline-block;
            text-align: left;
        }

        .scheduleBox {
            display: flex;
            justify-content: center;
            padding: 0px;
        }

        .schedule {
            width: 100%;
            text-align: center;
            border: solid 2px plum;
            border-radius: 10px;
            font-weight: bold;
            min-height: 120px;
            margin: 5px;
            display: flex;
            flex-direction:column;
            align-items:center;
            padding: 5px;
        }

        .schedule.tomorrow {
            width: 70%;
        }

        .schedule > .item {
            border: solid 2px plum;
            border-radius: 10px;
            width: 90%;
            display: inline-block;
            margin: 5px 0;
        }

        .schedule > .item:nth-child(2n) {
            background-color: plum;
            color: white;
        }

        .schedule > .item > div:nth-child(1) {
            display: inline-block;
            width:3em;
        }

        .schedule > .item > div:nth-child(2) {
            display: inline-block;
            width: 10em;
        }

        .schedule > .item > div:nth-child(3) {
            display: inline-block;
            width: 4em;
        }

        .schedule > .title {
            border-bottom: solid 2px plum;
            width: 100%;
            height: 2em;
        }

        @@media screen and (max-width:738px) {
            .schedule.tomorrow {
                width: 100%;
            }
        }

        #todayDiv {
            font-size: 1em;
        }

        #todayConsume {
            font-size: 3em;
            font-weight: 600;
            color: #f56a6a;
            font-style: italic;
        }

        .calConsume {
            font-size: 1.2em;
            font-style: italic;
            color: #f56a6a;
        }
    </style>
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "wsForm" }))
{
    @Html.AntiForgeryToken()
}
<div id="main">
    <div class="inner">
        <header id="header">
            <a href="/Home2/Index"><img src="~/Areas/Admin/Content/tempimage/hLogoRed.jpg" width="50"></a>
            <a href="index.html" class="logo"><strong>Editorial</strong> by HTML5 UP</a>

            <ul class="icons">
                <li><a href="#" class="icon brands fa-twitter"><span class="label">Twitter</span></a></li>
                <li><a href="#" class="icon brands fa-facebook-f"><span class="label">Facebook</span></a></li>
                <li><a href="#" class="icon brands fa-snapchat-ghost"><span class="label">Snapchat</span></a></li>
                <li><a href="#" class="icon brands fa-instagram"><span class="label">Instagram</span></a></li>
                <li><a href="#" class="icon brands fa-medium-m"><span class="label">Medium</span></a></li>
            </ul>
        </header>

        <div id="mainDiv">
            <div id="mainRow" class="row">
                <div class="mainTitle col-12">運動排程</div>
                <div class="myBox col-12" style="min-height:150px; position:relative">
                    <div class="row innerRow">
                        <div class="col-12 col-12-medium col-12-small scheduleBox">
                            <div class="schedule tomorrow">
                                <div class="title">明天</div>
                            </div>
                        </div>
                        <div class="col-4 col-6-medium col-12-small scheduleBox">
                            <div class="schedule">
                                <div class="title">明天</div>
                            </div>
                        </div>
                        <div class="col-4 col-6-medium col-12-small scheduleBox">
                            <div class="schedule">
                                <div class="title">明天</div>
                            </div>
                        </div>
                        <div class="col-4 col-6-medium col-12-small scheduleBox">
                            <div class="schedule">
                                <div class="title">明天</div>
                            </div>
                        </div>
                        <div class="col-4 col-6-medium col-12-small scheduleBox">
                            <div class="schedule">
                                <div class="title">明天</div>
                            </div>
                        </div>
                        <div class="col-4 col-6-medium col-12-small scheduleBox">
                            <div class="schedule">
                                <div class="title">明天</div>
                            </div>
                        </div>
                        <div class="col-4 col-6-medium col-12-small scheduleBox">
                            <div class="schedule future">
                                <div class="title">明天</div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="todayDiv" class="myBox operate col-6 col-6-medium col-12-small">
                    今日已消耗　<span id="todayConsume"></span>　卡路里
                    <div id="container" style="width: 100%; margin: 0 auto"></div>
                </div>
                <div id="check" class="myBox operate col-6 col-6-medium col-12-small">
                    <div id="checkRow" class="row innerRow">
                    </div>
                </div>
                <div id="testSetDate" class="button">測試setData</div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript" src="~/Content/jquery-ui/jquery-ui-1.12.1.custom/jquery-ui.min.js"></script>
    <script type="text/javascript" src="~/Content/moment-js/moment.min.js"></script>
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/highcharts-more.js"></script>
    <script src="https://code.highcharts.com/modules/solid-gauge.js"></script>
    @*<script src="https://code.highcharts.com/modules/exporting.js"></script>*@

<script>

        //=================================================================
        //global variable

        var minDate = null, maxDate = null;
        var token = null;
        let today = new Date();
        today = new Date(today.toDateString());

        //==================================================================
        $(function () {

            var form = $('#wsForm');
            token = $('input[name="__RequestVerificationToken"]', form).val();

            //==============================================================
            //Show Today Schedule

            $.ajax({
                url: "GetTodayWorkout",
                type: "post",
                data: {
                    __RequestVerificationToken: token
                },
                success: function (data) {

                    for (var i = 0; i < data.length; i++) {

                        let wsWrapper = document.createElement("div");
                        $(wsWrapper).css("display", "flex").css("align-items", "center")
                            .css("border-bottom", "solid 2px #f56a6a")
                            .css("padding-right", "1.5em")
                            .addClass("col-12").addClass("col-6-medium").addClass("col-12-small");

                        let wsDetail = document.createElement("div");
                        $(wsDetail).css("display", "inline-block");

                        let wt = document.createElement("span");
                        let w = document.createElement("span");
                        let wh = document.createElement("span");
                        let consume = document.createElement("span");

                        //$(wt).addClass("wsTime");
                        //$(w).addClass("wsName");
                        //$(wh).addClass("wsHours");

                        $(wt).text(moment(data[i].WorkoutTime).format("MM月DD日yyyy年 HH:mm"))
                        $(w).text(data[i].Name).css("margin-left", "2em");
                        $(wh).text(data[i].WorkoutHours + "hrs").css("margin-left", "1em");
                        $(consume).html(`估計消耗<span class="calConsume">${data[i].Consume}</span>卡路里`).css("margin-left", "4em");;

                        $(wsDetail).append(wt).append("<br/>")
                            .append(w).append(wh).append("<br/>")
                            .append(consume);

                        let chkBtn = document.createElement("div");
                        $(chkBtn).addClass("button")
                        $(chkBtn).css("padding", "0px 5px").css("display", "inline-block")
                            .css("margin-left", "auto");

                        if (data[i].StatusID == 4) {
                            $(chkBtn).addClass("primary")
                            $(chkBtn).attr("data-wlid", data[i].ID);
                            $(chkBtn).text("確認執行");
                        } else if (data[i].StatusID == 5) {
                            $(chkBtn).attr("data-wlid", data[i].ID).attr("disabled", true);
                            $(chkBtn).text("執行成功");
                        } else if (data[i].StatusID == 6) {
                            $(chkBtn).attr("data-wlid", data[i].ID).attr("disabled", true);
                            $(chkBtn).text("執行失敗");
                        }


                        $(wsWrapper).append(wsDetail).append(chkBtn);

                        $("#checkRow").append(wsWrapper);

                    }

                }
            });

            //=================================================================
            //Check Schedule
            $("body").on("click", "#checkRow .button", function () {

                if ($(this).attr("disabled")) {
                    return;
                }

                //var option = $("#wNameForNew")
                //    .children(`option:contains(${$(this).parent().find(".wsName").text()})`);

                //let wTime = moment($(this).parent().find(".wsTime").text(), "MM月DD日yyyy年 HH:mm");

                //let wHours = $(this).parent().find(".wsHours").text();
                //wHours = wHours.substring(0, wHours.length - 3);

                let wlid = $(this).attr("data-wlid");

                $.ajax({
                    url: "CheckTodaySchedule",
                    type: "post",
                    data: {
                        __RequestVerificationToken: token,
                        ID: wlid
                        //WorkoutID: option.val(),
                        //WorkoutTime: moment(wTime).format("YYYY-MM-DD HH:mm"),
                        //WorkoutHours: parseFloat(wHours),
                        //StatusID: 5
                    },
                    success: function (data) {
                        alert(data.Result);

                        $("#checkRow .button[data-wlid=" + wlid + "]").removeClass("primary")
                            .text("執行成功").attr("disabled", true);

                        chart.series[2].setData([{
                            color: "#2894FF",
                            radius: '62%',
                            innerRadius: '38%',
                            y: data.ConsumePercent
                        }]);

                    }
                });

            });

            //=================================================================
            //Show Week Schedule

            $(".schedule .title").each(function (i, ele) {

                if (i == 0) {
                    $(ele).text("明天");
                    return;
                }

                let tempDay = new Date(today);
                tempDay.setDate(tempDay.getDate() + i + 1);
                $(ele).text(intToWeekday(tempDay.getDay()));
            });

            $.ajax({
                url: "GetSchedule",
                type: "post",
                data: {
                    __RequestVerificationToken: token
                },
                success: function (data) {

                    let today = new Date();
                    today = new Date(today.toDateString());
                    let tomorrow = new Date(today);
                    tomorrow.setDate(tomorrow.getDate() + 1);
                    let d2a = new Date(today);
                    d2a.setDate(d2a.getDate() + 2);
                    let d3a = new Date(today);
                    d3a.setDate(d3a.getDate() + 3);
                    let d4a = new Date(today);
                    d4a.setDate(d4a.getDate() + 4);
                    let d5a = new Date(today);
                    d5a.setDate(d5a.getDate() + 5);
                    let d6a = new Date(today);
                    d6a.setDate(d6a.getDate() + 6);
                    let d7a = new Date(today);
                    d7a.setDate(d7a.getDate() + 7);

                    for (var i = 0; i < data.length; i++) {

                        let tempDay = new Date(moment(data[i].WorkoutTime).format("YYYY-MM-DD HH:mm"));

                        let tempDiv = document.createElement("div");
                        $(tempDiv).addClass("item");
                        $(tempDiv).attr("data-wlid", data[i].ID);
                        $(tempDiv).html(
                            `<div>${moment(data[i].WorkoutTime).format("HH:mm")}</div>
                                                    <div>${data[i].Name}</div>
                                                    <div>${data[i].WorkoutHours}hrs</div>`);

                        if (tempDay.toDateString() == tomorrow.toDateString()) {

                            $(".schedule").eq(0).append(tempDiv);

                        } else if (tempDay.toDateString() == d2a.toDateString()) {

                            $(".schedule").eq(1).append(tempDiv);

                        } else if (tempDay.toDateString() == d3a.toDateString()) {

                            $(".schedule").eq(2).append(tempDiv);

                        } else if (tempDay.toDateString() == d4a.toDateString()) {

                            $(".schedule").eq(3).append(tempDiv);

                        } else if (tempDay.toDateString() == d5a.toDateString()) {

                            $(".schedule").eq(4).append(tempDiv);

                        } else if (tempDay.toDateString() == d6a.toDateString()) {

                            $(".schedule").eq(5).append(tempDiv);

                        } else if (tempDay.toDateString() == d7a.toDateString()) {

                            $(".schedule").eq(6).append(tempDiv);
                        }

                    }
                }
            });

            //========================================================================
            //Today Consume
            $.ajax({
                url: "GetTodayConsume",
                type: "post",
                data: {
                    __RequestVerificationToken: token
                },
                success: function (data) {
                    $("#todayConsume").text(data.TodayConsume);
                }
            });


            //=========================================================================
            //initiate gauge

            Highcharts.Legend.prototype.colorizeItem = function (item, visible) {
                item.legendGroup[visible ? 'removeClass' : 'addClass']('highcharts-legend-item-hidden');
                if (!this.chart.styledMode) {
                    var legend = this,
                        options = legend.options,
                        legendItem = item.legendItem,
                        legendLine = item.legendLine,
                        legendSymbol = item.legendSymbol,
                        hiddenColor = legend.itemHiddenStyle.color,
                        textColor = visible ?
                            options.itemStyle.color :
                            hiddenColor,
                        symbolColor = visible ?
                            (item.color || hiddenColor) :
                            hiddenColor,
                        markerOptions = item.options && item.options.marker,
                        symbolAttr = {
                            fill: symbolColor
                        };
                    if (legendItem) {
                        legendItem.css({
                            fill: textColor,
                            color: textColor,// #1553, oldIE
                            fontSize: "20px"
                        });
                    }
                    if (legendLine) {
                        legendLine.attr({
                            stroke: symbolColor
                        });
                    }
                    if (legendSymbol) {
                        // Apply marker options
                        if (markerOptions) { // #585

                            symbolAttr = item.pointAttribs();
                            if (!visible) {
                                // #6769
                                symbolAttr.stroke = symbolAttr.fill = hiddenColor;
                            }
                        }
                        legendSymbol.attr(symbolAttr);
                    }
                }
                Highcharts.fireEvent(this, 'afterColorizeItem', {
                    item: item,
                    visible: visible
                });
            }


            var chart = Highcharts.chart('container', {

                chart: {
                    type: 'solidgauge',
                    height: '110%'
                },

                ////  ****** NEW ADDITION ***************
                legend: {
                    enabled: true
                },
                ////  ***********************************

                title: {
                    text: '今日熱量',
                    style: {
                        fontSize: '24px'
                    }
                },

                tooltip: {
                    borderWidth: 0,
                    backgroundColor: 'none',
                    shadow: false,
                    style: {
                        fontSize: '16px'
                    },
                    pointFormat: '{series.name}<br><span style="font-size:2em; color: {point.color}; font-weight: bold">{point.y}%</span>',
                    positioner: function (labelWidth) {
                        return {
                            x: (this.chart.chartWidth - labelWidth) / 2,
                            y: (this.chart.plotHeight / 2) + 15
                        };
                    }
                },

                pane: {
                    startAngle: 0,
                    endAngle: 360,
                    background: [{ // Track for Move
                        outerRadius: '112%',
                        innerRadius: '88%',
                        backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[0])
                            .setOpacity(0.3)
                            .get(),
                        borderWidth: 0
                    }, { // Track for Exercise
                        outerRadius: '87%',
                        innerRadius: '63%',
                        backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[1])
                            .setOpacity(0.3)
                            .get(),
                        borderWidth: 0
                    }, { // Track for Stand
                        outerRadius: '62%',
                        innerRadius: '38%',
                        backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[2])
                            .setOpacity(0.3)
                            .get(),
                        borderWidth: 0
                    }]
                },

                yAxis: {
                    min: 0,
                    max: 100,
                    lineWidth: 0,
                    tickPositions: []
                },

                plotOptions: {
                    solidgauge: {
                        dataLabels: {
                            enabled: false
                        },
                        linecap: 'round',
                        stickyTracking: false,
                        rounded: true,

                        ////  ****** NEW ADDITION ***************
                        showInLegend: true
                        ////  ***********************************

                    }
                },

                series: [{
                    name: 'TDEE',
                    marker: {
                        fillColor: "#f56a6a"
                    },
                    data: [{
                        color: "#f56a6a",
                        radius: '112%',
                        innerRadius: '88%',
                        y: @ViewBag.TDEE
                    }]
                }, {
                    name: '熱量攝取',
                    marker: {
                        fillColor: "plum"
                    },
                    data: [{
                        color: "plum",
                        radius: '87%',
                        innerRadius: '63%',
                        y: @ViewBag.Ingest
                    }]
                }, {
                    name: '運動消耗',
                    marker: {
                        fillColor: "#2894FF"
                    },
                    data: [{
                        color: "#2894FF",
                        radius: '62%',
                        innerRadius: '38%',
                        y: @ViewBag.Consume
                    }]
                }]
            });

            //=========================================================================
            //Test SetData
            $("#testSetDate").click(function () {
                chart.series[2].setData([{
                    //color: "#2894FF",
                    //radius: '62%',
                    //innerRadius: '38%',
                    y: 100
                }]);
            });

            //=========================================================================
            //initiate highChart

            //var colors = Highcharts.getOptions().colors,
            //    categories = ['HIGH', 'MODERATE', 'CRITICAL'],
            //    data = [{
            //        y: 33.33,
            //        color: '#a6b9c1',
            //        drilldown: {
            //            name: 'MSIE versions',
            //            categories: ['MSIE 6.0', 'MSIE 7.0'],
            //            data: [0.5, 0.5],
            //            color: ['#30add9', '#306885']
            //        }
            //    }, {
            //        y: 33.33,
            //        color: '#a6b9c1',
            //        drilldown: {
            //            name: 'Firefox versions',
            //            categories: ['Firefox v31', 'Firefox v32'],
            //            data: [0.5, 0.5],
            //            color: ['#30add9', '#306885']
            //        }
            //    }, {
            //        y: 33.33,
            //        color: '#a6b9c1',
            //        drilldown: {
            //            name: 'Chrome versions',
            //            categories: ['Chrome v30.0', 'Chrome v31.0', 'Chrome v32.0'],
            //            data: [0.34, 0.33, 0.33],
            //            color: ['#23377b', '#30add9', '#306885']
            //        }
            //    }],
            //    browserData = [],
            //    versionsData = [],
            //    i,
            //    j,
            //    dataLen = data.length,
            //    drillDataLen,
            //    brightness;


            //// Build the data arrays
            //for (i = 0; i < dataLen; i += 1) {

            //    // add browser data
            //    browserData.push({
            //        name: categories[i],
            //        y: data[i].y,
            //        color: data[i].color
            //    });

            //    // add version data
            //    drillDataLen = data[i].drilldown.data.length;
            //    for (j = 0; j < drillDataLen; j += 1) {
            //        versionsData.push({
            //            name: data[i].drilldown.categories[j],
            //            y: data[i].drilldown.data[j],
            //            color: data[i].drilldown.color[j]
            //        });
            //    }
            //}

            //// Create the chart
            //$('#container').highcharts({
            //    chart: {
            //        type: 'pie'
            //    },
            //    title: {
            //        text: '',
            //        align: 'center',
            //        verticalAlign: 'middle',
            //        y: 20
            //    },
            //    subtitle: {
            //        text: '今日卡路里',
            //        style: {
            //            "font-size": "2em"
            //        }
            //    },
            //    plotOptions: {
            //        pie: {
            //            shadow: false,
            //            // borderWidth:10,
            //            center: ['50%', '50%'],
            //            slicedOffset: 10,
            //            states: {
            //                hover: false
            //            }
            //        }
            //    },
            //    tooltip: {
            //        enabled: false
            //    },
            //    series: [{
            //        name: 'Browsers',
            //        data: browserData,
            //        size: '60%',
            //        innerSize: '50%',
            //        dataLabels: {
            //            formatter: function () {
            //                return this.point.name;
            //            },
            //            color: '#3f377f',
            //            //rotation: -25,
            //            //  rotation: rotate(),
            //            distance: -30
            //        }
            //    }, {
            //        name: 'Versions',
            //        data: [{ name: "consume", y: 0.3, color: "#f56a6a" },
            //            { name: "ingestDeduct", y: 0.3, color: "#f56a7a" },
            //            { name: "ingestDeduct", y: 0.3, color: "#f56a8a" },
            //        ],
            //        // borderWidth:0,
            //        size: '90%',
            //        innerSize: '66%',
            //        dataLabels: {
            //            //	useHTML:true,
            //            formatter: function () {
            //                return this.point.name;
            //            },
            //            color: '#000'
            //            //inside:true

            //        },
            //        allowPointSelect: false,
            //        stickyTracking: false
            //    }]
            //});


        });

        function intToWeekday(wd) {

            switch (wd) {
                case 0:
                    return "星期日";
                case 1:
                    return "星期一";
                case 2:
                    return "星期二";
                case 3:
                    return "星期三";
                case 4:
                    return "星期四";
                case 5:
                    return "星期五";
                case 6:
                    return "星期六";
            }
        }
</script>
}



