@model DTO.MealDetailDTO

@{
    ViewBag.Title = "Creat";
    Layout = "~/Areas/Admin/Views/Shared/AdminLayout.cshtml";
}

<h2>新增餐點</h2>


@using (Html.BeginForm("CreateMeal", "Meal", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label>餐點名稱</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @* @Html.LabelFor(model => model.Calories, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label>卡路里</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Calories, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Calories, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label>餐點圖片</label>
            <input type="file" name="MealOptionUpLoadImage" id="progressbarTWInput" accept="image/gif, image/jpeg, image/png" />
        </div>
        <div>
            <p>
                預覽圖:
            </p>
            <img id="preview_progressbarTW_img" src="#" />
        </div>

        <div class="form-group">
            @* @Html.LabelFor(model => model.UnitName, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label>餐點份量</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnitName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitName, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.TagName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TagName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TagName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TagImage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TagImage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TagImage, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.NutrientID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NutrientID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NutrientID, "", new { @class = "text-danger" })
                </div>
            </div>*@

    <div class="form-group">
        @* @Html.LabelFor(model => model.Fat, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <label>脂肪</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Fat, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Fat, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @* @Html.LabelFor(model => model.Protein, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <label>蛋白質</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Protein, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Protein, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.Carbs, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <label>碳水化合物</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Carbs, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Carbs, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @* @Html.LabelFor(model => model.Sugar, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <label>糖</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sugar, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Sugar, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @* @Html.LabelFor(model => model.VitA, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <label>維生素A</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.VitA, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VitA, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @* @Html.LabelFor(model => model.VitB, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <label>維生素B</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.VitB, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VitB, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.VitC, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label>維生素C</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.VitC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VitC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @* @Html.LabelFor(model => model.VitD, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label>維生素D</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.VitD, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VitD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @* @Html.LabelFor(model => model.VitE, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label>維生素E</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.VitE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VitE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @* @Html.LabelFor(model => model.Na, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label>鈉</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Na, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Na, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @* @Html.LabelFor(model => model.Potassium, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label>鉀</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Potassium, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Potassium, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @* @Html.LabelFor(model => model.Calcium, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label>鈣</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Calcium, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Calcium, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Icon, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label>鐵</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Icon, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Icon, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="新增餐點" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回餐點列表", "List")
</div>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Areas/Admin/Content/JS/jquery.min.js"></script>
<script>

    $("#progressbarTWInput").change(function () {

        readURL(this);

    });
    function readURL(input) {

        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $("#preview_progressbarTW_img").attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

</script>
