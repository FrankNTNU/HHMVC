@model DTO.GiftDTO

@{
    ViewBag.Title = "Creat";
    Layout = "~/Areas/Admin/Views/Shared/AdminLayout.cshtml";
}
<section class="content-header">
    <h2>新增禮物</h2>
    <ol class="breadcrumb float-sm-left">
        <li class="breadcrumb-item"><a>後臺頁面</a></li>
        <li class="breadcrumb-item"><a>禮物</a></li>
        <li class="breadcrumb-item active"><a>新增禮物</a></li>
    </ol>
</section>
    @using (Html.BeginForm("Creat", "Gift", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
<br />
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="form-group">
    @*@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
    <label>禮物名稱</label>
    <div class="col-md-10">
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @* @Html.LabelFor(model => model.Store, htmlAttributes: new { @class = "control-label col-md-2" })*@
    <label>廠商名稱</label>
    <div class="col-md-10">
        @Html.EditorFor(model => model.Store, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Store, "", new { @class = "text-danger" })
    </div>
</div>

    <div class="form-group">
        <label>上傳照片</label>
        <input type="file" name="UpLoadImage" id="progressbarTWInput" accept="image/gif, image/jpeg, image/png" />
    </div>
    <div>
        <p>
            預覽圖:
        </p>
        <img id="preview_progressbarTW_img" src="#" />
    </div>

    <div class="form-group">
        @* @Html.LabelFor(model => model.Point, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <label>兌換所需點數</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Point, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Point, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @*        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <label>可兌換數量</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @* @Html.LabelFor(model => model.AddDate, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <label>上架時間</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.AddDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AddDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @* @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <label>下架時間</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="新增禮物" class="btn btn-default" />
        </div>
    </div>
</div>
}


<div>
    @Html.ActionLink("返回禮物列表", "List")
</div>


<script src="~/Areas/Admin/Content/JS/jquery.min.js"></script>
<script>

    $("#progressbarTWInput").change(function () {

        readURL(this);

    });
    function readURL(input) {

        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $("#preview_progressbarTW_img").attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

</script>
